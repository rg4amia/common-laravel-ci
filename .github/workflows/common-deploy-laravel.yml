name: Reusable Workflow Example
on:
  workflow_call:
    inputs:
      sonar_host:
        required: true
        type: string
      environment:
        required: true
        type: string
      channel_id:
        required: true
        type: string
      github_actor:
        required: true
        type: string
      repo_github:
        required: true
        type: string
      branch_repo:
        required: true
        type: string
      version_php:
        required: true
        type: string
      project_name:
        required: true
        type: string
      version_dependency:
        required: true
        type: string
    secrets:
      HOST:
        required: true
      USERNAME:
        required: true
      KEY:
        required: true
      PORT:
        required: true
      SSH_PRIVATE_KEY:
        #required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        uses: actions/checkout@v4
      - name: environment
        run: |
          echo "${{ inputs.environment }} environment"
      - name: Sonar host
        run: |
          echo "Sonar url: ${{ inputs.sonar_host }}"
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.version_php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - name: Installer les dependences
        run: composer install --prefer-dist --no-interaction
      - name: Copy file .env.exemple to .env
        run: cp .env.example .env
      - name: Generate key
        run: php artisan key:generate
      - name: Execution des tests
        run: |
            echo "Execution des tests"
      - name: Post to a Slack channel
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.channel_id }}
          slack-message: "GitHub build result: ${{ job.status }}\n${{ inputs.github_actor }}\n${{ runner.os }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  analyse_code:
    runs-on: ubuntu-latest
    steps:
      - name: Generate SBOM with CycloneDX
        run: |
            composer require --dev cyclonedx/cyclonedx-php-composer
            composer update
            composer CycloneDX:make-sbom --output-file=sbom.xml
      - name: Dependency Track
        uses: neerajsu/dependency-track-gh-action@v1.0.4
        with:
          serverHostBaseUrl: ${{ vars.DEPENDENCY_TRACK_URL }}
          apikey: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}
          projectname: ${{ inputs.project_name }}
          projectversion: ${{ inputs.version_dependency }}
          bomFilePath: './sbom.xml'
          timeoutInSecs: '10'
          failOnSeverityLevel: 'CRITICAL'
      - name: Execution des tests
        run: |
            echo "Execution des tests"
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Post to a Slack channel
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.channel_id }}
          slack-message: "GitHub build result: ${{ job.status }}\n${{ inputs.github_actor }}\n${{ runner.os }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }} 
          script: |
            set -e
            echo "Deploying application ..."
            cd /var/www/html/gestage/ && git pull origin ${{ inputs.branch_repo }}
            (php artisan down) || true
            sudo /usr/local/bin/composer install --ignore-platform-reqs --no-interaction --prefer-dist --optimize-autoloader
            sudo /usr/local/bin/composer install --ignore-platform-reqs --no-interaction --no-progress --prefer-dist --optimize-autoloader
            php artisan migrate --force
            chown -R apache:apache /var/www/html/gestage
            sudo chmod 755 -R /var/www/html/gestage
            php artisan optimize
            php artisan storage:link
            php artisan up
            echo "Application deployed!"
      - name: Post to a Slack channel
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.channel_id }}
          slack-message: "GitHub build result: ${{ job.status }}\n${{ inputs.github_actor }}\n${{ runner.os }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


